<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>2019 on Cong&#39;s Log</title>
    <link>https://congchan.github.io/tags/2019/</link>
    <description>Recent content in 2019 on Cong&#39;s Log</description>
    <generator>Hugo -- 0.147.9</generator>
    <language>en</language>
    <lastBuildDate>Sat, 01 May 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://congchan.github.io/tags/2019/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Early Rumour Detection</title>
      <link>https://congchan.github.io/posts/early-rumour-detection/</link>
      <pubDate>Sat, 01 May 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/early-rumour-detection/</guid>
      <description>&lt;p&gt;2019, ACL&lt;/p&gt;
&lt;p&gt;data: TWITTER, WEIBO&lt;/p&gt;
&lt;p&gt;links: &lt;a href=&#34;https://www.aclweb.org/anthology/N19-1163&#34;&gt;https://www.aclweb.org/anthology/N19-1163&lt;/a&gt;, &lt;a href=&#34;https://github.com/DeepBrainAI/ERD&#34;&gt;https://github.com/DeepBrainAI/ERD&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;task: Rumour Detection&lt;/p&gt;
&lt;p&gt;这篇文章采用GRU编码社交媒体posts stream，作为环境的状态表示；训练一个分类器以GRU的状态输出为输入，对文本做二分类判断是否是rumor。用DQN训练agent，根据状态做出是否启动rumor分类器进行判断，并根据分类结果对错给予奖惩。目标就是尽可能准尽可能早地预测出社交媒体posts是否是rumor。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Focuses on the task of rumour detection; particularly, we are in- terested in understanding &lt;strong&gt;how early&lt;/strong&gt; we can detect them.&lt;/p&gt;
&lt;p&gt;Our model treats social media posts (e.g. tweets) as a data stream and integrates reinforcement learning to learn the number minimum num- ber of posts required before we classify an event as a rumour.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper8.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let $E$ denote an event, and it consists of a series of relevant posts $x_i$, where $x_0$ denotes the source message and $x_T$ the last relevant message. The objective of early rumor detection is to &lt;strong&gt;make a classification decision&lt;/strong&gt; &lt;strong&gt;whether E is a rumour as early as possible&lt;/strong&gt; while keeping an acceptable detection accuracy.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Matching the Blanks - Distributional Similarity for Relation Learning</title>
      <link>https://congchan.github.io/posts/matching-the-blanks-distributional-similarity-for-relation-learning/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/matching-the-blanks-distributional-similarity-for-relation-learning/</guid>
      <description>&lt;p&gt;2019, ACL&lt;/p&gt;
&lt;p&gt;data: KBP37, SemEval 2010 Task 8, TACRED&lt;/p&gt;
&lt;p&gt;task: Entity and Relation Extraction&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Build task agnostic relation representations solely from entity-linked text.&lt;/p&gt;
&lt;h1 id=&#34;缺陷&#34;&gt;缺陷&lt;/h1&gt;
&lt;p&gt;文章认为网页中, 相同的的实体对一般指代相同的实体关系, 把实体不同的构建为负样本. 这个在单份文件中可能大概率是对的.&lt;/p&gt;
&lt;p&gt;但是实体不完全一直不代表这个两对实体的关系不同. 所以这个作为负样本是本质上映射的是实体识别而不是关系.&lt;/p&gt;
&lt;p&gt;比较好的方式是把实体不同但是关系一样的也考虑进来.&lt;/p&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;h2 id=&#34;define-relation-statement&#34;&gt;Define Relation Statement&lt;/h2&gt;
&lt;p&gt;We define a relation statement to be a block of text containing two marked entities. From this, we create training data that contains relation statements in which the entities have been replaced with a special [BLANK]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Open-Domain Targeted Sentiment Analysis via Span-Based Extraction and Classification</title>
      <link>https://congchan.github.io/posts/open-domain-targeted-sentiment-analysis-via-span-based-extraction-and-classification/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/open-domain-targeted-sentiment-analysis-via-span-based-extraction-and-classification/</guid>
      <description>&lt;p&gt;2019, ACL&lt;/p&gt;
&lt;p&gt;data: SemEval 2014, SemEval 2014 ABSA, SemEval 2015, SemEval 2016&lt;/p&gt;
&lt;p&gt;task: ABSA&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;propose a &lt;strong&gt;span-based extract-then-classify framework&lt;/strong&gt;, where multiple opinion targets are directly extracted from the sentence under the supervision of target span boundaries, and corresponding polarities are then classified using their span representations.&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用指针网络选取target，避免了序列标注的搜索空间过大问题&lt;/li&gt;
&lt;li&gt;用span边界+极性的标注方式，解决多极性的target问题&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;p&gt;Input:&lt;/p&gt;
&lt;p&gt;sentence &lt;code&gt;x =(x1,..., xn)&lt;/code&gt; with length &lt;code&gt;n&lt;/code&gt;,&lt;/p&gt;
&lt;p&gt;Target list &lt;code&gt;T = {t1,..., tm}&lt;/code&gt;： each target ti is annotated with its start, end position, and its sentiment polarity&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
