<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>NAACL on Cong&#39;s Log</title>
    <link>https://congchan.github.io/tags/naacl/</link>
    <description>Recent content in NAACL on Cong&#39;s Log</description>
    <generator>Hugo -- 0.147.9</generator>
    <language>en</language>
    <lastBuildDate>Tue, 20 Apr 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://congchan.github.io/tags/naacl/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Frustratingly Easy Approach for Joint Entity and Relation Extraction</title>
      <link>https://congchan.github.io/posts/a-frustratingly-easy-approach-for-joint-entity-and-relation-extraction/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/a-frustratingly-easy-approach-for-joint-entity-and-relation-extraction/</guid>
      <description>&lt;p&gt;2020, NAACL&lt;/p&gt;
&lt;p&gt;data: ACE 04, ACE 05, SciERC&lt;/p&gt;
&lt;p&gt;links: &lt;a href=&#34;https://github.com/princeton-nlp/PURE&#34;&gt;https://github.com/princeton-nlp/PURE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;task: Entity and Relation Extraction&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;提出了一种简单但是有效的pipeline方法:builds on two independent pre-trained encoders and merely uses the entity model to provide input features for the relation model.&lt;/p&gt;
&lt;p&gt;实验说明: validate the importance of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;learning distinct contextual representations for entities and relations&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;fusing entity information at the input layer of the relation model,&lt;/li&gt;
&lt;li&gt;and incorporating global context.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从效果上看, 似乎是因为cross sentence的context加成更大&lt;/p&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;p&gt;Input: a sentence X consisting of n tokens &lt;code&gt;x1, . . . , xn&lt;/code&gt;. Let &lt;code&gt;S = {s1, . . . , sm}&lt;/code&gt; be all the possible spans in &lt;code&gt;X&lt;/code&gt; of up to length &lt;code&gt;L&lt;/code&gt; and &lt;code&gt;START(i)&lt;/code&gt; and &lt;code&gt;END(i)&lt;/code&gt; denote start and end indices of &lt;code&gt;si&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
