<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>2020 on Cong&#39;s Log</title>
    <link>https://congchan.github.io/tags/2020/</link>
    <description>Recent content in 2020 on Cong&#39;s Log</description>
    <generator>Hugo -- 0.147.9</generator>
    <language>en</language>
    <lastBuildDate>Thu, 23 Dec 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://congchan.github.io/tags/2020/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Curious Case of Neural Text Degeneration</title>
      <link>https://congchan.github.io/posts/the-curious-case-of-neural-text-degeneration/</link>
      <pubDate>Thu, 23 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/the-curious-case-of-neural-text-degeneration/</guid>
      <description>&lt;p&gt;Holtzman, Ari, et al. The Curious Case of Neural Text Degeneration. arXiv:1904.09751, arXiv, 14 Feb. 2020. arXiv.org, &lt;a href=&#34;http://arxiv.org/abs/1904.09751&#34;&gt;http://arxiv.org/abs/1904.09751&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;从语言模型生成文本（例如生成故事）的最佳解码策略是什么仍然是一个悬而未决的问题。违反直觉的经验观察是，即使使用似然作为训练目标可以为广泛的语言理解任务生成高质量的模型，但基于maximization-based decoding的解码方法（例如beam search）会导致退化（degeneration）——输出文本平淡无奇，不连贯，或陷入重复循环。&lt;/p&gt;
&lt;p&gt;文本生成中的decoding strategy主要可以分为两大类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Argmax Decoding: 主要包括beam search, class-factored softmax等&lt;/li&gt;
&lt;li&gt;Stochastic Decoding: 主要包括temperature sampling, top-k sampling等&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了解决这个问题，提出了 &lt;strong&gt;Nucleus Sampling（Top-p Sampling）&lt;/strong&gt;，这是一种简单但有效的方法，可以从神经语言模型中提取比以前的解码策略质量更高的文本。The key idea is to use the shape of the probability distribution to determine the set of tokens to be sampled from.&lt;/p&gt;
&lt;h1 id=&#34;method&#34;&gt;Method&lt;/h1&gt;
&lt;p&gt;通过截断概率分布的不可靠尾部分布、从包含绝大多数概率质量的标记的dynamic nucleus中采样来避免文本退化。&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper19.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper19-1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper19-2.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper19-3.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper19-4.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;效果analysisfindings&#34;&gt;效果/Analysis/Findings&lt;/h1&gt;
&lt;p&gt;为了正确检查当前基于最大化和随机的解码方法，我们将这些方法中的每一种的生成与人类文本从几个方向（如可能性、多样性和重复）的分布进行了比较。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Codex - Evaluating Large Language Models Trained on Code</title>
      <link>https://congchan.github.io/posts/codex-evaluating-large-language-models-trained-on-code/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/codex-evaluating-large-language-models-trained-on-code/</guid>
      <description>&lt;p&gt;Codex：M. Chen et al., ‘Evaluating Large Language Models Trained on Code’. arXiv, Jul. 14, 2021. Available: &lt;a href=&#34;http://arxiv.org/abs/2107.03374&#34;&gt;http://arxiv.org/abs/2107.03374&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;intro&#34;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Codex, a GPT language model finetuned on publicly available code from GitHub&lt;/p&gt;
&lt;p&gt;Task: docstring-conditional code generation&lt;/p&gt;
&lt;h1 id=&#34;method&#34;&gt;Method&lt;/h1&gt;
&lt;p&gt;Codex: fine-tune GPT3 models containing up to 12B parameters on code to produce Codex.&lt;/p&gt;
&lt;p&gt;Codex-S: fine-tune Codex on standalone, correctly implemented functions.&lt;/p&gt;
&lt;p&gt;Inference: assemble each HumanEval problem into a prompt consisting of a header, a signature, and a docstring. We use nucleus sampling (Holtzman et al., 2020) with top p = 0.95 for all sampling evaluation in this work&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scaling Laws for Neural Language Models</title>
      <link>https://congchan.github.io/posts/scaling-laws-for-neural-language-models/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/scaling-laws-for-neural-language-models/</guid>
      <description>&lt;p&gt;Kaplan, Jared, et al. ‘Scaling Laws for Neural Language Models’. &lt;em&gt;arXiv:2001.08361 [Cs, Stat]&lt;/em&gt;, Jan. 2020. &lt;em&gt;arXiv.org&lt;/em&gt;, &lt;a href=&#34;http://arxiv.org/abs/2001.08361&#34;&gt;http://arxiv.org/abs/2001.08361&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;tldr&#34;&gt;TL:DR&lt;/h1&gt;
&lt;p&gt;key findings for Transformer language models are are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Performance depends strongly on scale, weakly on model shape&lt;/strong&gt;: Model performance depends most strongly on scale, which consists of three factors: the number of model parameters N (excluding embeddings), the size of the dataset D, and the amount of compute C used for training. Within reasonable limits, performance depends very weakly on other architectural hyperparameters such as depth vs. width. (Section 3)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smooth power laws&lt;/strong&gt;: Performance has a power-law relationship with each of the three scale factors N, D, C when not bottlenecked by the other two, with trends spanning more than six orders of magnitude (see Figure 1). We observe no signs of deviation from these trends on the upper end, though performance must flatten out eventually before reaching zero loss. (Section 3)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper14.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CorefQA - Coreference resolution as query-based span prediction</title>
      <link>https://congchan.github.io/posts/corefqa-coreference-resolution-as-query-based-span-prediction/</link>
      <pubDate>Tue, 11 May 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/corefqa-coreference-resolution-as-query-based-span-prediction/</guid>
      <description>&lt;p&gt;2020, ACL&lt;/p&gt;
&lt;p&gt;data: CoNLL-2012, GAP&lt;/p&gt;
&lt;p&gt;task: Coreference Resolution&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;通过QA方式处理coreference问题，A query is generated for each candidate mention using its surrounding con- text, and a span prediction module is em- ployed to extract the text spans of the corefer- ences within the document using the generated query.&lt;/p&gt;
&lt;p&gt;近期的方法有consider all text spans in a document as potential mentions and learn to find an antecedent for each possible mention. There。这种仅依靠mention的做对比的方法的缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;At the task formalization level： 因为当前数据集有很多遗漏的mention， mentions left out at the mention proposal stage can never be recov- ered since the downstream module only operates on the proposed mentions.&lt;/li&gt;
&lt;li&gt;At the algorithm level：Semantic matching operations be- tween two mentions (and their contexts) are per- formed only at the output layer and are relatively superficial&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;p&gt;Speaker information： directly concatenates the speaker’s name with the corresponding utterance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Frustratingly Easy Approach for Joint Entity and Relation Extraction</title>
      <link>https://congchan.github.io/posts/a-frustratingly-easy-approach-for-joint-entity-and-relation-extraction/</link>
      <pubDate>Tue, 20 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/a-frustratingly-easy-approach-for-joint-entity-and-relation-extraction/</guid>
      <description>&lt;p&gt;2020, NAACL&lt;/p&gt;
&lt;p&gt;data: ACE 04, ACE 05, SciERC&lt;/p&gt;
&lt;p&gt;links: &lt;a href=&#34;https://github.com/princeton-nlp/PURE&#34;&gt;https://github.com/princeton-nlp/PURE&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;task: Entity and Relation Extraction&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;提出了一种简单但是有效的pipeline方法:builds on two independent pre-trained encoders and merely uses the entity model to provide input features for the relation model.&lt;/p&gt;
&lt;p&gt;实验说明: validate the importance of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;learning distinct contextual representations for entities and relations&lt;/strong&gt;,&lt;/li&gt;
&lt;li&gt;fusing entity information at the input layer of the relation model,&lt;/li&gt;
&lt;li&gt;and incorporating global context.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从效果上看, 似乎是因为cross sentence的context加成更大&lt;/p&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;p&gt;Input: a sentence X consisting of n tokens &lt;code&gt;x1, . . . , xn&lt;/code&gt;. Let &lt;code&gt;S = {s1, . . . , sm}&lt;/code&gt; be all the possible spans in &lt;code&gt;X&lt;/code&gt; of up to length &lt;code&gt;L&lt;/code&gt; and &lt;code&gt;START(i)&lt;/code&gt; and &lt;code&gt;END(i)&lt;/code&gt; denote start and end indices of &lt;code&gt;si&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Two are Better than One - Joint Entity and Relation Extraction with Table-Sequence Encoders</title>
      <link>https://congchan.github.io/posts/two-are-better-than-one-joint-entity-and-relation-extraction-with-table-sequence-encoders/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/two-are-better-than-one-joint-entity-and-relation-extraction-with-table-sequence-encoders/</guid>
      <description>&lt;p&gt;2020, EMNLP&lt;/p&gt;
&lt;p&gt;data: ACE 04, ACE 05, ADE, CoNLL04&lt;/p&gt;
&lt;p&gt;links: &lt;a href=&#34;https://github.com/LorrinWWW/two-are-better-than-one&#34;&gt;https://github.com/LorrinWWW/two-are-better-than-one&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;task: Entity and Relation Extraction&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;In this work, we propose the novel table-sequence encoders where two different encoders – a table encoder and a sequence encoder are designed to help each other in the representation learning process.&lt;/p&gt;
&lt;p&gt;这篇ACL 2020文章认为, 之前的Joint learning方法侧重于learning a single encoder (usually learning representation in the form of a table) to capture information required for both tasks within the same space. We argue that it can be beneficial to design two distinct encoders to capture such two different types of information in the learning process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improving Event Detection via Open-domain Trigger Knowledge</title>
      <link>https://congchan.github.io/posts/improving-event-detection-via-open-domain-trigger-knowledge/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/improving-event-detection-via-open-domain-trigger-knowledge/</guid>
      <description>&lt;p&gt;2020, ACL&lt;/p&gt;
&lt;p&gt;data: ACE 05&lt;/p&gt;
&lt;p&gt;task: Event Detection&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Propose a novel Enrichment Knowledge Distillation (EKD) model to efficiently distill external open-domain trigger knowledge to reduce the in-built biases to frequent trigger words in annotations.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;leverage the wealth of the open-domain trigger knowledge to improve ED&lt;/li&gt;
&lt;li&gt;propose a novel teacher-student model (EKD) that can learn from both labeled and unlabeled data&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt=&#34;/images/papers/paper2.png&#34; loading=&#34;lazy&#34; src=&#34;https://congchan.github.io/images/papers/paper2.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;缺点&#34;&gt;缺点&lt;/h1&gt;
&lt;p&gt;只能对付普遍情况, 即一般性的触发词; 但触发词不是在任何语境下都是触发词.&lt;/p&gt;
&lt;h1 id=&#34;方法&#34;&gt;方法&lt;/h1&gt;
&lt;p&gt;empower the model with external knowledge called Open-Domain Trigger Knowledge, defined as a prior that specifies which words can trigger events without subject to pre-defined event types and the domain of texts.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cross-media Structured Common Space for Multimedia Event Extraction</title>
      <link>https://congchan.github.io/posts/cross-media-structured-common-space-for-multimedia-event-extraction/</link>
      <pubDate>Wed, 24 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://congchan.github.io/posts/cross-media-structured-common-space-for-multimedia-event-extraction/</guid>
      <description>&lt;p&gt;2020, ACL
Task: MultiMedia Event Extraction&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;Introduce a new task, MultiMedia Event Extraction (M2E2), which aims to extract events and their arguments from multimedia documents. Construct the first benchmark and evaluation dataset for this task, which consists of 245 fully annotated news articles&lt;/p&gt;
&lt;p&gt;Propose a novel method, Weakly Aligned Structured Embedding (WASE), that encodes structured representations of semantic information from textual and visual data into a common embedding space. which takes advantage of annotated unimodal corpora to separately learn visual and textual event extraction, and uses an image-caption dataset to align the modalities&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
